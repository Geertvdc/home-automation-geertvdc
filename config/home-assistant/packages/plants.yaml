homeassistant:
  customize:
    plant.plant_living_tv_1:
      friendly_name: 'Plant TV rechts'
    sensor.plant_living_tv_1_battery:
      friendly_name: 'Plant TV rechts batterij'
      icon: mdi:battery
    plant.plant_living_tv_2:
      friendly_name: 'Plant TV links'
    sensor.plant_living_tv_2_battery:
      friendly_name: 'Plant TV links batterij'
      icon: mdi:battery
    plant.plant_living_diningtable:
      friendly_name: 'Plant eettafel'
    sensor.plant_living_diningtable_battery:
      friendly_name: 'Plant eettafel batterij'
      icon: mdi:battery


sensor:
  # Plant sensor TV rechts (Spathiphyllum 'Zero Cupido')
  - platform: mqtt
    name: plant_living_tv_1_moisture
    state_topic: miflora/sensor/plant_living_tv_1/state
    value_template: '{{ value_json.moisture }}'
    unit_of_measurement: '%'
  - platform: mqtt
    name: plant_living_tv_1_conductivity
    state_topic: miflora/sensor/plant_living_tv_1/state
    value_template: '{{ value_json.conductivity }}'
    unit_of_measurement: 'μs / cm'
  - platform: mqtt
    name: plant_living_tv_1_temperature
    state_topic: miflora/sensor/plant_living_tv_1/state
    value_template: '{{ value_json.temperature }}'
    unit_of_measurement: '° C'
  - platform: mqtt
    name: plant_living_tv_1_light
    state_topic: miflora/sensor/plant_living_tv_1/state
    value_template: '{{ value_json.light }}'
    unit_of_measurement: 'Lux'
  - platform: mqtt
    name: plant_living_tv_1_battery
    state_topic: miflora/sensor/plant_living_tv_1/state
    value_template: '{{ value_json.battery }}'
    unit_of_measurement: '%'
    
  # Plant sensor TV links (Spathiphyllum 'Zero Cupido')
  - platform: mqtt
    name: plant_living_tv_2_moisture
    state_topic: miflora/sensor/plant_living_tv_2/state
    value_template: '{{ value_json.moisture }}'
    unit_of_measurement: '%'
  - platform: mqtt
    name: plant_living_tv_2_conductivity
    state_topic: miflora/sensor/plant_living_tv_2/state
    value_template: '{{ value_json.conductivity }}'
    unit_of_measurement: 'μs / cm'
  - platform: mqtt
    name: plant_living_tv_2_temperature
    state_topic: miflora/sensor/plant_living_tv_2/state
    value_template: '{{ value_json.temperature }}'
    unit_of_measurement: '° C'
  - platform: mqtt
    name: plant_living_tv_2_light
    state_topic: miflora/sensor/plant_living_tv_2/state
    value_template: '{{ value_json.light }}'
    unit_of_measurement: 'Lux'
  - platform: mqtt
    name: plant_living_tv_2_battery
    state_topic: miflora/sensor/plant_living_tv_2/state
    value_template: '{{ value_json.battery }}'
    unit_of_measurement: '%'

  # Plant sensor Eettafel (Hyacinthus Orientalis)
  - platform: mqtt
    name: plant_living_diningtable_moisture
    state_topic: miflora/sensor/plant_living_diningtable/state
    value_template: '{{ value_json.moisture }}'
    unit_of_measurement: '%'
  - platform: mqtt
    name: plant_living_diningtable_conductivity
    state_topic: miflora/sensor/plant_living_diningtable/state
    value_template: '{{ value_json.conductivity }}'
    unit_of_measurement: 'μs / cm'
  - platform: mqtt
    name: plant_living_diningtable_temperature
    state_topic: miflora/sensor/plant_living_diningtable/state
    value_template: '{{ value_json.temperature }}'
    unit_of_measurement: '° C'
  - platform: mqtt
    name: plant_living_diningtable_light
    state_topic: miflora/sensor/plant_living_diningtable/state
    value_template: '{{ value_json.light }}'
    unit_of_measurement: 'Lux'
  - platform: mqtt
    name: plant_living_diningtable_battery
    state_topic: miflora/sensor/plant_living_diningtable/state
    value_template: '{{ value_json.battery }}'
    unit_of_measurement: '%'

plant:
  plant_living_tv_1:
    sensors:
      moisture: sensor.plant_living_tv_1_moisture
      temperature: sensor.plant_living_tv_1_temperature
      conductivity: sensor.plant_living_tv_1_conductivity
      brightness: sensor.plant_living_tv_1_light
      battery: sensor.plant_living_tv_1_battery
    min_moisture: 20
    max_moisture: 65
    min_battery: 20
    
  plant_living_tv_2:
    sensors:
      moisture: sensor.plant_living_tv_2_moisture
      temperature: sensor.plant_living_tv_2_temperature
      conductivity: sensor.plant_living_tv_2_conductivity
      brightness: sensor.plant_living_tv_2_light
      battery: sensor.plant_living_tv_2_battery
    min_moisture: 20
    max_moisture: 65
    min_battery: 20

  plant_living_diningtable:
    sensors:
      moisture: sensor.plant_living_diningtable_moisture
      temperature: sensor.plant_living_diningtable_temperature
      conductivity: sensor.plant_living_diningtable_conductivity
      brightness: sensor.plant_living_diningtable_light
      battery: sensor.plant_living_diningtable_battery
    min_moisture: 20
    max_moisture: 60
    min_battery: 20
    
automation:
- alias: Plant has problem
  trigger:
    - platform: state
      entity_id: plant.plant_living_tv_1
      to: 'problem'
    - platform: state
      entity_id: plant.plant_living_tv_2
      to: 'problem'
    - platform: state
      entity_id: plant.plant_living_diningtable
      to: 'problem'
  condition:
    - condition: template
      value_template: >
        {% macro plant_problem() %}
          {% for state in states.plant if (
              state.attributes["problem"] != "none" 
            )
            -%}
            {{ state.name }}: {{ state.attributes["problem"] }}
          {%- endfor %}
        {% endmacro %}
        {{ plant_problem() | trim != ""}}
  action:
    - service: notify.telegram
      data_template:
        message: >
          {% macro plant_problem() %}
          {% for state in states.plant if (
              state.attributes["problem"] != "none" 
            )
            -%}
            {{ state.name }}: {{ state.attributes["problem"] }}{{- '\n' -}}
          {%- endfor %}
          {% endmacro %}
          Plants need attention:
          {{ plant_problem() }}